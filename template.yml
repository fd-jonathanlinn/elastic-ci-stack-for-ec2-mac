---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Buildkite Elastic Mac %v"

Parameters:
  HostFamily:
    Type: String
    Description: Host type to provision, e.g. mac1 for mac1.metal.
    Default: "mac2"

  InstanceType:
    Type: String
    Description: Instance type to provision, e.g. mac1.metal.
    Default: "mac2.metal"

  ImageId:
    Type: AWS::EC2::Image::Id
    Description: EC2 AMI to boot on the dedicated hosts. Expects auto-login for the ec2-user to be configured.

  RootVolumeSize:
    Type: Number
    Description: Root volume size in GiB.

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets to launch dedicated instances in.

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The VPC security groups to associate with the network interface of launched instances.

  IamInstanceProfile:
    Type: String
    Description: Optional. The IAM Instance Profile ARN to associate with instances.
    Default: ""

  MinSize:
    Type: Number
    Description: Minimum number of instances to boot.
    Default: 0

  MaxSize:
    Type: Number
    Description: Maximum number of instances to boot.
    Default: 3

  BuildkiteAgentToken:
    Type: String
    NoEcho: true
    Description: "Buildkite Agent token from https://buildkite.com/organizations/-/agents"
    Default: ""

  BuildkiteAgentQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

  KeyName:
    Description: Optional - SSH keypair used to access the buildkite instances via ec2_user, setting this will enable SSH ingress
    Type: String
    Default: ""

  EnableCostAllocationTags:
    Type: String
    Description: Enables AWS Cost Allocation tags for all resources in the stack. See https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

  CostAllocationTagName:
    Type: String
    Description: The name of the Cost Allocation Tag used for billing purposes
    Default: "CreatedBy"

  CostAllocationTagValue:
    Type: String
    Description: The value of the Cost Allocation Tag used for billing purposes
    Default: "buildkite-elastic-ci-stack-for-aws"

  InstanceName:
    Type: String
    Description: Optional - Customise the EC2 instance Name tag
    Default: "buildkite-agent"

  EnableInstanceUserData:
    Type: String
    Description: Optional - Enables the bootstrap commands for EC2 instances in the UserData field of the launch template
    AllowedValues:
      - "true"
      - "false"
    Default: "true"

Conditions:
  IamInstanceProfileProvided:
    !Not [ !Equals [ "", !Ref IamInstanceProfile ] ]

  HasKeyName:
    !Not [ !Equals [ !Ref KeyName, "" ] ]

  UseCostAllocationTags:
    !Equals [ !Ref EnableCostAllocationTags, "true" ]

  UseInstanceUserData:
    !Equals [ !Ref EnableInstanceUserData, "true" ]

Outputs:
  ResourceGroupId:
    Description: Dedicated resource group ID.
    Value: !GetAtt DedicatedHostGroup.Arn

Resources:
  DedicatedHostGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Ref AWS::StackName
      Configuration:
        - Type: AWS::EC2::HostManagement
          Parameters:
            - Name: any-host-based-license-configuration
              Values:
                - true
            - Name: allowed-host-families
              Values: [ !Ref HostFamily ]
            - Name: auto-allocate-host
              Values:
                - true
            - Name: auto-release-host
              Values:
                - true
        - Type: AWS::ResourceGroups::Generic
          Parameters:
            - Name: allowed-resource-types
              Values:
                - AWS::EC2::Host
            - Name: deletion-protection
              Values:
                - UNLESS_EMPTY

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        KeyName: !If [ "HasKeyName", !Ref KeyName, !Ref 'AWS::NoValue' ]
        Placement:
          HostResourceGroupArn: !GetAtt DedicatedHostGroup.Arn
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: !Ref RootVolumeSize
              VolumeType: gp3
        SecurityGroupIds: !Ref SecurityGroupIds
        IamInstanceProfile:
          Arn: !If [ IamInstanceProfileProvided, !Ref IamInstanceProfile, !Ref AWS::NoValue ] 
        TagSpecifications:
            - ResourceType: instance
              Tags:
                - Key: Role
                  Value: buildkite-agent
                - Key: Name
                  Value: !Ref InstanceName
                - Key: BuildkiteAgentQueue
                  Value: !Ref BuildkiteAgentQueue
                - !If
                  - UseCostAllocationTags
                  - Key: !Ref CostAllocationTagName
                    Value: !Ref CostAllocationTagValue
                  - !Ref "AWS::NoValue"
        UserData:
          Fn::Base64:
            !If
              - UseInstanceUserData
              - !Sub |
                  #!/bin/bash
                  PDISK=$(diskutil list physical external | head -n1 | cut -d" " -f1)
                  APFSCONT=$(diskutil list physical external | grep "Apple_APFS" | tr -s " " | cut -d" " -f8)
                  yes | diskutil repairDisk $PDISK
                  diskutil apfs resizeContainer $APFSCONT 0
                  systemsetup -setcomputersleep never
                  user=ec2-user
                  sudo -u "${!user}" -i <<'EOF'
                  brew install buildkite/buildkite/buildkite-agent
                  config="$(brew --prefix)"/etc/buildkite-agent/buildkite-agent.cfg
                  until [ -f "${!config}" ]
                  do
                    sleep 10
                  done
                  sed -i '' "s/xxx/${BuildkiteAgentToken}/g" "${!config}"
                  echo "tags=\"queue=${BuildkiteAgentQueue},buildkite-mac-stack=%v\"" >> "${!config}"
                  echo "tags-from-ec2-meta-data=true" >> "${!config}"
                  brew services start buildkite/buildkite/buildkite-agent
                  EOF
              - |
                #!/bin/bash
                echo "UserData was disabled"

  AutoScaleGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
